import React from 'react'
interface IconProps {
    isActive?: boolean;
    className?: string;
}

const PredictiveIcon: React.FC<IconProps> = ({ isActive, className }) => {
        const strokeColor = isActive ? '#954767' : '#686868';
    return (
        <div>
            <svg xmlns="http://www.w3.org/2000/svg" width="17" height="17" viewBox="0 0 17 17" fill="none">
                <g clipPath="url(#clip0_2076_6069)">
                    <path fillRule="evenodd" clipRule="evenodd" d="M15.8074 10.3142L14.4648 8.97151L14.7345 8.702L16.0771 10.0447L15.8074 10.3142ZM11.0335 6.96926C11.1667 6.98753 11.2917 6.89644 11.311 6.76091L11.4886 5.5177C11.5117 5.35616 11.3728 5.21705 11.2112 5.24035L9.96791 5.41793C9.93603 5.42246 9.90536 5.43322 9.87764 5.44961C9.84993 5.466 9.82571 5.48769 9.80638 5.51344C9.78705 5.53919 9.77299 5.56849 9.76499 5.59968C9.75698 5.63087 9.75521 5.66332 9.75975 5.6952C9.769 5.7596 9.80342 5.81771 9.85546 5.85677C9.9075 5.89582 9.97291 5.91263 10.0373 5.90351L10.5521 5.82997L9.44707 6.93491C8.70653 6.02064 8.77203 4.68798 9.6112 3.84859C10.5145 2.94507 11.9771 2.9451 12.8804 3.84859C13.7836 4.75203 13.7839 6.21437 12.8804 7.11774C12.0415 7.95644 10.7053 8.01867 9.79391 7.28187L10.899 6.17666L10.8254 6.69164C10.8162 6.75605 10.833 6.82146 10.872 6.8735C10.9111 6.92555 10.9692 6.95999 11.0335 6.96926ZM9.18217 7.89334C10.4346 8.96918 12.3134 8.9025 13.4895 7.72658C14.7294 6.48691 14.7294 4.47899 13.4895 3.23932C12.2495 1.99946 10.2422 1.99946 9.00216 3.23932C7.82609 4.4152 7.75956 6.29403 8.83533 7.54669L9.09881 7.28312C8.16703 6.17529 8.23348 4.53246 9.26443 3.50159C10.3597 2.4064 12.132 2.40663 13.2273 3.50159C14.3225 4.59655 14.3223 6.36936 13.2273 7.46432C12.197 8.49457 10.5509 8.55752 9.44585 7.62974L9.18217 7.89334ZM7.09538 9.90287C6.94682 9.90287 6.82607 9.78184 6.82607 9.63336C6.82607 9.48492 6.94686 9.36394 7.09538 9.36394C7.24401 9.36394 7.36477 9.48492 7.36477 9.63336C7.36477 9.7818 7.24397 9.90287 7.09538 9.90287ZM4.4914 7.43492C4.34292 7.43492 4.22205 7.31397 4.22205 7.16541C4.22205 7.01693 4.34292 6.89602 4.4914 6.89602C4.64003 6.89602 4.7609 7.01697 4.7609 7.16541C4.76087 7.31393 4.64003 7.43492 4.4914 7.43492ZM1.8875 9.22262C1.73898 9.22262 1.61807 9.10167 1.61807 8.95323C1.61807 8.80467 1.73894 8.68376 1.8875 8.68376C2.03606 8.68376 2.15693 8.80471 2.15693 8.95323C2.15693 9.10171 2.03606 9.22262 1.8875 9.22262ZM16.4314 9.7053L15.0738 8.34754C14.8982 8.17221 14.6176 8.15976 14.4277 8.3181L14.004 7.89429C15.2712 6.44895 15.204 4.26002 13.8364 2.89236C12.405 1.46095 10.0866 1.46107 8.65528 2.89236C7.28765 4.25995 7.22048 6.44914 8.48768 7.89429L7.43038 8.95147C7.32311 8.89855 7.20483 8.87178 7.08522 8.87337C6.96561 8.87496 6.84808 8.90486 6.74225 8.96062L5.18193 7.48195C5.41179 6.98255 5.04625 6.40538 4.49136 6.40538C3.98766 6.40538 3.62448 6.88841 3.75982 7.37006L2.34132 8.34396C1.84317 7.97267 1.12758 8.32797 1.12758 8.95323C1.12758 9.37209 1.46845 9.71311 1.8875 9.71311C2.39132 9.71311 2.75454 9.23008 2.61912 8.74842L4.03758 7.77468C4.15237 7.8604 4.28909 7.91185 4.43191 7.92307C4.57473 7.93429 4.71781 7.90483 4.84457 7.83809L6.40485 9.31687C6.17514 9.81581 6.53996 10.3934 7.09538 10.3934C7.66066 10.3934 8.02362 9.79765 7.77727 9.29851L8.83452 8.24129C10.2124 9.44905 12.2793 9.44905 13.6571 8.24129L14.0809 8.6651C13.9241 8.85345 13.9339 9.13438 14.1105 9.31096L15.4679 10.6687C15.6553 10.8558 15.9595 10.8559 16.1468 10.6687L16.4313 10.3839C16.6185 10.1968 16.6185 9.89232 16.4314 9.7053ZM1.46133 11.0906H2.31367V13.8584H1.46133V11.0906ZM4.06531 9.30278H4.91765V13.8583H4.06531V9.30278ZM6.66928 11.7707H7.52163V13.8584H6.66928V11.7707ZM11.9727 13.8584C12.0377 13.8584 12.1001 13.8842 12.1461 13.9302C12.1921 13.9762 12.218 14.0385 12.218 14.1036C12.218 14.1686 12.1921 14.231 12.1461 14.277C12.1001 14.323 12.0378 14.3488 11.9727 14.3488H0.630049C0.564999 14.3488 0.502616 14.323 0.456619 14.277C0.410621 14.231 0.384776 14.1686 0.384766 14.1036C0.384796 14.0385 0.41065 13.9762 0.456645 13.9302C0.502641 13.8842 0.565012 13.8584 0.630049 13.8584H0.97084V10.8453C0.970851 10.7802 0.996685 10.7179 1.04267 10.6719C1.08865 10.6259 1.15101 10.6 1.21605 10.6H2.55895C2.62399 10.6 2.68635 10.6259 2.73234 10.6719C2.77832 10.7179 2.80415 10.7802 2.80416 10.8453V13.8584H3.57474V9.05749C3.57475 8.99244 3.6006 8.93006 3.64659 8.88406C3.69259 8.83807 3.75497 8.81222 3.82002 8.81221H5.16286C5.2279 8.81223 5.29028 8.83808 5.33628 8.88408C5.38227 8.93007 5.40812 8.99245 5.40814 9.05749V13.8583H6.17872V11.5254C6.17872 11.4604 6.20456 11.398 6.25056 11.352C6.29656 11.306 6.35895 11.2802 6.424 11.2802H7.76683C7.83188 11.2802 7.89426 11.306 7.94025 11.352C7.98624 11.398 8.01208 11.4604 8.01208 11.5254V13.8583H11.9727V13.8584Z" fill={strokeColor} />
                </g>
                <defs>
                    <clipPath id="clip0_2076_6069">
                        <rect width="16" height="16" fill="white" transform="translate(0.478027 0.0839844)" />
                    </clipPath>
                </defs>
            </svg>
        </div>
    )
}

export default PredictiveIcon
